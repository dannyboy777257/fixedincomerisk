---
title: "Shiny IR App"
format: html
editor: visual
---

```{r libraries}
library(tidyverse)
library(tidyquant)
library(RTL)
library(shiny)
library(lubridate)
library(Rcpp)
```

```{r with cpp}

symbols <- c("DGS1MO", "DGS3MO", "DGS6MO", "DGS1", "DGS2", "DGS3", "DGS5", "DGS7", "DGS10", "DGS20", "DGS30")

bonds_with_cpp <- tidyquant::tq_get(symbols,
                                    get = "economic.data",
                                    from = "1992-01-01",
                                    to = Sys.Date()) %>%
  tidyr::drop_na() %>% 
  dplyr::mutate(maturity_in_years = dplyr::case_when(
    symbol == "DGS1MO" ~ round(1/12, 7),
    symbol == "DGS3MO" ~ round(3/12, 7),
    symbol == "DGS6MO" ~ 6/12,
    symbol == "DGS1"   ~ 1,
    symbol == "DGS2"   ~ 2,
    symbol == "DGS3"   ~ 3,
    symbol == "DGS5"   ~ 5,
    symbol == "DGS7"   ~ 7,
    symbol == "DGS10"  ~ 10,
    symbol == "DGS20"  ~ 20,
    symbol == "DGS30"  ~ 30
  )) 




bonds_with_cpp <- bonds_with_cpp %>%
  dplyr::rename(yield = price) %>%
  dplyr::mutate(yield = yield / 100,
                changeBasisPoints = round(((yield - lag(yield, 1)) * 10000), digits = 5),
                par = 100) %>% 
dplyr::arrange(desc(date)) %>% 
dplyr::mutate(yield_plus = yield + 0.0001,
              
            
              yield_minus = yield - 0.0001,
              

              
              price_plus = mapply(bondPrice,
                                  ytm = yield_plus,
                                  faceValue = par,
                                  coupon = 0,
                                  ttm = maturity_in_years,
                                  freq = 2),
              

              price_minus = mapply(bondPrice,
                                  ytm = yield_minus,
                                  faceValue = par,
                                  coupon = 0,
                                  ttm = maturity_in_years,
                                  freq = 2),
              
              
              price = mapply(bondPrice,
                              ytm = yield,
                              faceValue = par,
                              coupon = 0,
                              ttm = maturity_in_years,
                              freq = dplyr::case_when(symbol == "DGS1MO" ~ 12, 
                                                      symbol == "DGS3MO" ~ 4, 
                                                      TRUE ~ 2)),
              
              duration_w_formula = maturity_in_years/(1+(yield/2)), # should be slightly less than maturity in years, using this to check
              
              duration = (price_plus - price_minus)/ ((2*0.0001)*price), # x% basis point change in rate brings x% "duration" change in bond value  
              
              gamma = (price_plus - 2*price + price_minus)/(price*2*0.0001), 
              
              delta = 0.0001*price*duration, #the 0.0001 can be changed to see price change from that change in rate.
              
              dollar_gamma = (gamma * price * 0.0001), 
              
              # start pl
              
              delta_pl = delta, 
              
              gamma_pl = gamma, 
              
              unexplained_pl = price - (price+delta_pl+gamma_pl))





bonds_with_cpp %>% 
  plotly::plot_ly(x = ~ date, 
                  y = ~delta, 
                  name = ~symbol, 
                  color = ~symbol) %>% 
  plotly::add_lines() %>% 
  plotly::layout(title = list(text = "Bond Price Change per 1 Basis point increase in yield: 1995 - Present", x = 0), 
                 xaxis = list(title = "Date"), 
                 yaxis = list(title = "$ value of 1 basis point:")
  )
  


# dollar value of a basis point over time 
bonds_with_cpp %>%  
  plotly::plot_ly(x = ~ date, 
                  y = ~delta, 
                  name = ~symbol, 
                  color = ~symbol) %>% 
  plotly::add_lines() %>% 
  plotly::layout(title = list(text = "Bond Price Change per 1 Basis point increase in yield: 1995 - Present", x = 0), 
                 xaxis = list(title = "Date"), 
                 yaxis = list(title = "$ value of 1 basis point:")
  )






# annualized rolling 30 day standard deviation of delta


sd_date_start <-  "2019-01-01"

bonds_with_cpp %>%
  dplyr::filter(date > sd_date_start) %>% 
  dplyr::group_by(symbol) %>% 
  dplyr::mutate(sd_of_delta = slider::slide_dbl(
   .x = delta, 
   .f = sd, 
   .before = 30, 
   .after = 0, 
   .complete = FALSE
  ) * sqrt(12)) %>% 
  plotly::plot_ly(x = ~ date, 
                  y = ~sd_of_delta, 
                  name = ~symbol, 
                  color = ~symbol) %>% 
  plotly::add_lines() %>% 
  plotly::layout(title = list(text = "30 day rolling standard deviation of delta (Annualized)", x = 0), 
                 xaxis = list(title = "Date"), 
                 yaxis = list(title = "sd %")
  ) %>% 
  dplyr::ungroup()



todays_date <- Sys.Date() %>% as.character()

bonds_with_cpp %>% dplyr::slice(1:77) %>% 
  dplyr::select(maturity_in_years, yield, date) %>% 
  dplyr::arrange(maturity_in_years) %>% 
  ggplot2::ggplot(mapping  = aes(x = maturity_in_years, 
                                 y = yield, 
                                 col = date)) + 
  geom_point() +
  labs(title = paste0("Yield curve as of ",todays_date))

                  


```

```{r phil}


bonds_with_cpp_phil <- tidyquant::tq_get("DGS1", 
                  get = "economic.data",
                  from = "1992-01-01",
                  to = Sys.Date()) %>%
  tidyr::drop_na() %>% 
  dplyr::mutate(maturity_in_years = dplyr::case_when(symbol == "DGS1"   ~ 1)) %>%
  dplyr::rename(yield = price) %>%
  dplyr::mutate(yield = yield / 100,
                changeBasisPoints = round(((yield - lag(yield, 1)) * 10000), digits = 5),
                par = 100) %>% 
dplyr::group_by(symbol) %>% 
dplyr::arrange(desc(date)) %>% 
dplyr::mutate(yield_plus = yield + 0.0001,
              
            
              yield_minus = yield - 0.0001,
              

              
              price_plus = mapply(bondPrice,
                                  ytm = yield_plus,
                                  faceValue = par,
                                  coupon = 0,
                                  ttm = maturity_in_years,
                                  freq = 2),
              

              price_minus = mapply(bondPrice,
                                  ytm = yield_minus,
                                  faceValue = par,
                                  coupon = 0,
                                  ttm = maturity_in_years,
                                  freq = 2),
              
              
              price = mapply(bondPrice,
                              ytm = yield,
                              faceValue = par,
                              coupon = 0,
                              ttm = maturity_in_years,
                              freq = 2),
              
              delta = (price_plus-price_minus) / (2*0.0001)/10000, 
              
              gamma = 0.5*((price_plus - 2*price + price_minus)/ 0.0001^2)/10000^2)
```

```{r}

ttm = 10
yield_of_bond_in_question = 0.05 # this will be the chosen bond
coupon_rate = 0.05
step_size = 0.001

# make the grid of yields spanning from 2.5% to 7.5% 
# below is single column of yields from 2.5% to 7.5%
dynamic <- dplyr::tibble(yield = round(seq(0.025, 0.075, step_size),4)) %>%  # seq(start, stop, step), # use this in RTL::bond or bondPrice cpp
dplyr::mutate(par = 100) %>%
dplyr::mutate(yield_plus = yield + 0.0001, 
              yield_minus = yield - 0.0001) %>% 
dplyr::mutate(price = mapply(bondPrice, 
                             ytm = yield, 
                             faceValue = par,
                             coupon = coupon_rate, 
                             ttm = ttm, 
                             freq = 2), 
              
              price_plus = mapply(bondPrice,
                                  ytm = yield_plus,
                                  faceValue = par,
                                  coupon = coupon_rate,
                                  ttm = ttm,
                                  freq = 2),
              
              price_minus = mapply(bondPrice,
                                  ytm = yield_minus,
                                  faceValue = par,
                                  coupon = coupon_rate,
                                  ttm = ttm,
                                  freq = 2),
              
              delta = (price_plus-price_minus) / (2*0.0001)/10000, 
              
              gamma = 0.5*((price_plus - 2*price + price_minus)/ 0.0001^2)/10000^2)
              

# delta at current yield
current_delta <- dynamic %>% dplyr::filter(yield == yield_of_bond_in_question) %>% dplyr::select(delta) %>% as.numeric()



# price at current yield
current_price <- dynamic %>% dplyr::filter(yield == yield_of_bond_in_question) %>% dplyr::select(price) %>% as.numeric()




# add slope at current yield aka delta
dynamic <- dynamic %>% 
  dplyr::mutate(delta_current_price = current_price + current_delta * (yield - yield_of_bond_in_question) * 10000)




dynamic %>% dplyr::select(yield, 
                          price, 
                          delta_current_price) %>% 
  tidyr::pivot_longer(-yield, 
                      names_to = "seriesname",
                      values_to = "values") %>% 
  ggplot2::ggplot(mapping = aes(x = yield, 
                                y = values, 
                                col = seriesname)
) + geom_line()




```

```{r}
yields <- tidyquant::tq_get(symbols, get = "economic.data", from = "1992-01-01", to = Sys.Date()) %>%
  tidyr::drop_na() %>% 
  dplyr::mutate(maturity_in_years = dplyr::case_when(
    symbol == "DGS1MO" ~ round(1/12, 3),
    symbol == "DGS3MO" ~ round(3/12, 3),
    symbol == "DGS6MO" ~ 6/12,
    symbol == "DGS1"   ~ 1,
    symbol == "DGS2"   ~ 2,
    symbol == "DGS3"   ~ 3,
    symbol == "DGS5"   ~ 5,
    symbol == "DGS7"   ~ 7,
    symbol == "DGS10"  ~ 10,
    symbol == "DGS20"  ~ 20,
    symbol == "DGS30"  ~ 30
  ))  %>%
  dplyr::rename(rate = price) %>%
  dplyr::group_by(symbol) %>% 
  dplyr::mutate(rate = rate / 100,
                couponRate = 0,
                frequency = dplyr::case_when(symbol == "DGS1MO" ~ 12, 
                                      symbol == "DGS3MO" ~ 4,
                                      TRUE ~ 2),
                changeBasisPoints = round(((rate - lag(rate, 1)) * 10000), digits = 5),
                par = 1000) %>% 
  dplyr::arrange(desc(date)) %>% 
  dplyr::mutate(yield_plus = rate + 0.0001,
                yield_minus = rate - 0.0001) %>% 
  dplyr::rowwise() %>% 
  dplyr::mutate(
    price = bondPrice(ytm = rate,
                      faceValue = par,
                      coupon = couponRate,
                      ttm = maturity_in_years,
                      freq = frequency),
    pricePlus = bondPrice(ytm = yield_plus,
                          faceValue = par,
                          coupon = couponRate,
                          ttm = maturity_in_years,
                          freq = frequency),
    priceMinus = bondPrice(ytm = yield_minus,
                           faceValue = par,
                           coupon = couponRate,
                           ttm = maturity_in_years,
                           freq = frequency)
  ) %>% 
  dplyr::ungroup()

recentBond_everything <- yields %>%
  filter(date == max(date))




append <- dplyr::tibble(yield = round(seq(0.025, 0.075, step_size),4)) %>% 
  tidyr::nest()


recentBond <- yields %>%
  filter(date == max(date)) %>% 
  transmute(YTM = rate,
            Maturity = maturity_in_years,
            CouponRate = couponRate,
            PortfolioAllocation = par,
            Frequency = frequency,
            Value = round(price, 2), 
            price = price, 
            pricePlus = pricePlus, 
            priceMinus = priceMinus, 
            yield_plus = yield_plus,
            yield_minus = yield_minus) %>%
  dplyr::mutate(duration_w_formula = Maturity/(1+(YTM/2)), 
              
              duration = (pricePlus - priceMinus)/ ((2*0.0001)*price),  
              
              gamma = (pricePlus - 2*price + priceMinus)/(price*2*0.0001)) %>% 
  dplyr::mutate(sequence = append) %>% 
  tidyr::unnest(sequence) %>% 
  tidyr::unnest(data) %>% 
  dplyr::group_by(YTM) %>% 
  dplyr::mutate(price_new_yield = mapply(bondPrice, 
                                         ytm = yield,
                           faceValue = PortfolioAllocation,
                           coupon = CouponRate,
                           ttm = Maturity,
                           freq = Frequency),
                shock = yield - YTM, 
                delta_pl = duration*shock*1000, 
                gamma_pl = gamma * shock * 1000) %>%
  dplyr::mutate(unexplained_pl = (price_new_yield-price)-delta_pl-gamma_pl) %>% 
  dplyr::mutate(fake_weight = 1/11) %>% 
  dplyr::mutate(total_pl = delta_pl + gamma_pl + unexplained_pl) %>% 
  dplyr::mutate(pl_attribution_to_weight = fake_weight * total_pl) 
  # tidyr::pivot_wider(names_from = YTM, values_from = pl_attribution_to_weight)
  
  
recent_bond_cool <- recentBond %>% 
  dplyr::select(YTM,
                yield, 
                shock,
                total_pl, 
                fake_weight,
                pl_attribution_to_weight) %>% 
  dplyr::arrange(yield) %>% 
  dplyr::select(YTM, yield, shock, pl_attribution_to_weight) 



recent_bond_cool %>%  plotly::plot_ly(x = ~shock, 
                y = ~pl_attribution_to_weight, 
                col = ~ YTM, 
                name = ~YTM) %>% 
  plotly::add_lines() %>% 
  plotly::layout(title = list(text = "Where is PL coming from at each shock", x = 0), 
                 xaxis = list(title = "Shock Amount %"), 
                 yaxis = list(title = "Weighed Portfolio PL")
  )












recentBond_summary <- recentBond %>% 
  dplyr::group_by(yield) %>% 
  dplyr::summarise(pl = sum(pl_attribution_to_weight)) %>% 
dplyr::distinct()


recentBond_summary %>% 
  plotly::plot_ly(x = ~yield, 
                  y = ~pl) %>% 
  plotly::add_lines() %>% 
  plot
  
 
 
 

```
